<?xml version="1.0" encoding="utf-8"?>

<helpItems xmlns="http://msh" schema="maml">

<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-SCOEvent</command:name>
		<maml:description>
			<maml:para>Returns all events for a given timeframe</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>SCOEvent</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para></maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-SCOEvent</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>minDate</maml:name>
				<maml:description>
					<maml:para>minimum date for event
(get-date).addminutes(-60)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>maxDate</maml:name>
				<maml:description>
					<maml:para>maximum date for event
(get-date)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>webserverURL</maml:name>
			<maml:description>
				<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>minDate</maml:name>
			<maml:description>
				<maml:para>minimum date for event
(get-date).addminutes(-60)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>maxDate</maml:name>
			<maml:description>
				<maml:para>maximum date for event
(get-date)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>(get-date)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="4">
			<maml:name>alternateCredentials</maml:name>
			<maml:description>
				<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">NetworkCredential</command:parameterValue>
			<dev:type>
				<maml:name>NetworkCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  GetSCOEvent --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ws = New-SCOWebserverURL webserver.domain.com 81
Get-SCOEvent -webserverURL $ws -minDate (get-date).addminutes(-300)</dev:code>
  			<dev:remarks>
				<maml:para>returns all events for the last 300 minutes</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>Id            : e9cbad19-86da-48cc-8439-0200990fbc51
Type          : Information
SourceName    : MGOSCORBP2
SourceId      : 87d0ab9f-15a2-4fd8-aaf2-9f39fe147ec0
CreationTime  : 6/10/2013 10:39:54 AM
Summary       : Runbook Server MGOSCORBP2 is reaching its maximum capacity
Description   : The number of runbooks running on the Runbook Server is approaching the maximum number allowed for this Runbook Server (200).
RunbookServer :

Id            : 6fe15cb1-0025-40c8-bf70-04769e2e9156
Type          : Information
SourceName    : MGOSCORBP2
SourceId      : 87d0ab9f-15a2-4fd8-aaf2-9f39fe147ec0
CreationTime  : 6/10/2013 10:23:36 AM
Summary       : Runbook Server MGOSCORBP2 is reaching its maximum capacity
Description   : The number of runbooks running on the Runbook Server is approaching the maximum number allowed for this Runbook Server (200).
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-SCOJob</command:name>
		<maml:description>
			<maml:para>gets details for a given job</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>SCOJob</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Can pass a Runbook, specific Job, specific Runbook Server or query the entire system. Can be reduced by jobStatus</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-SCOJob</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>job</maml:name>
				<maml:description>
					<maml:para>a pointer to a job to get the details of. This can be found with commands like Get-SCORunbookJobs or Invoke-SCORunbook</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >JobInstance</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>LoadJobDetails</maml:name>
				<maml:description>
					<maml:para>Load the Details of found jobs</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SCOJob</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>allJobs</maml:name>
				<maml:description>
					<maml:para>set to retrieve all jobs in an environment</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>jobStatus</maml:name>
				<maml:description>
					<maml:para>Return only jobs in a given status
ex: Running, Completed, Pending, Canceled</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>LoadJobDetails</maml:name>
				<maml:description>
					<maml:para>Load the Details of found jobs</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SCOJob</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>runbook</maml:name>
				<maml:description>
					<maml:para>Pointer to the runbook to filter down to</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Runbook</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>jobStatus</maml:name>
				<maml:description>
					<maml:para>Return only jobs in a given status
ex: Running, Completed, Pending, Canceled</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>LoadJobDetails</maml:name>
				<maml:description>
					<maml:para>Load the Details of found jobs</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SCOJob</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>runbookServer</maml:name>
				<maml:description>
					<maml:para>Pointer to the Runbook Server to filter down to</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >RunbookServer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>jobStatus</maml:name>
				<maml:description>
					<maml:para>Return only jobs in a given status
ex: Running, Completed, Pending, Canceled</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>LoadJobDetails</maml:name>
				<maml:description>
					<maml:para>Load the Details of found jobs</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>webserverURL</maml:name>
			<maml:description>
				<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>job</maml:name>
			<maml:description>
				<maml:para>a pointer to a job to get the details of. This can be found with commands like Get-SCORunbookJobs or Invoke-SCORunbook</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">JobInstance</command:parameterValue>
			<dev:type>
				<maml:name>JobInstance</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>LoadJobDetails</maml:name>
			<maml:description>
				<maml:para>Load the Details of found jobs</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="4">
			<maml:name>alternateCredentials</maml:name>
			<maml:description>
				<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">NetworkCredential</command:parameterValue>
			<dev:type>
				<maml:name>NetworkCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>allJobs</maml:name>
			<maml:description>
				<maml:para>set to retrieve all jobs in an environment</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>jobStatus</maml:name>
			<maml:description>
				<maml:para>Return only jobs in a given status
ex: Running, Completed, Pending, Canceled</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>runbook</maml:name>
			<maml:description>
				<maml:para>Pointer to the runbook to filter down to</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Runbook</command:parameterValue>
			<dev:type>
				<maml:name>Runbook</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>runbookServer</maml:name>
			<maml:description>
				<maml:para>Pointer to the Runbook Server to filter down to</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">RunbookServer</command:parameterValue>
			<dev:type>
				<maml:name>RunbookServer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Start Job then get status --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ws = New-SCOWebserverURL webserver.domain.com 81
$job = Start-Runbook $ws -runbookGUID &quot;79227096-28b2-480e-8d99-c3823f013939&quot;
Get-SCOJob $ws -job $job</dev:code>
  			<dev:remarks>
				<maml:para>starts a job without waiting for completion then gets its status</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>job                           InputParameters               OutputParameters                      ActiveInstances
---                           ---------------               ----------------                      ---------------
OrchestratorInterop.SCOrch... {}                            {}                                                  0

$job.job

Id               : b36ace00-73c5-48fa-a392-d2b71f14a26b
RunbookId        : 79227096-28b2-480e-8d99-c3823f013939
Parameters       : &lt;Data&gt;&lt;/Data&gt;
RunbookServers   :
RunbookServerId  :
ParentId         :
ParentIsWaiting  : False
Status           : Pending
CreatedBy        : S-1-5-21-1085031214-651377827-725345543-441162
CreationTime     : 6/10/2013 7:17:39 PM
LastModifiedBy   : S-1-5-21-1085031214-651377827-725345543-441162
LastModifiedTime : 6/10/2013 7:17:39 PM
Runbook          :
Instances        : {}
RunbookServer    :
Statistics       : {}
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Get all Running Jobs --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ws = New-SCOWebserverURL webserver.domain.com 81
Get-SCOJob $ws -allJobs -jobStatus running -LoadJobDetails</dev:code>
  			<dev:remarks>
				<maml:para>returns all jobs in the environment in the running status and loads their parameters and instance counts</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>job                           InputParameters               OutputParameters                       ActiveInstances
---                           ---------------               ----------------                       ---------------
OrchestratorInterop.SCOrch... {}                            {}                                                   1
OrchestratorInterop.SCOrch... {}                            {}                                                   1
OrchestratorInterop.SCOrch... {}                            {}                                                   2
OrchestratorInterop.SCOrch... {}                            {}                                                   2
OrchestratorInterop.SCOrch... {}                            {}                                                   1
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-SCOMonitorRunbook</command:name>
		<maml:description>
			<maml:para>Returns monitor Runbooks</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>SCOMonitorRunbook</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>By default it will return all monitors in the environment. If a folder is specified it will only return the monitor Runbooks in that folder</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-SCOMonitorRunbook</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>loadParameterData</maml:name>
				<maml:description>
					<maml:para>flag to load input and output parameter data for the Runbook. Default is to not for efficiency.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SCOMonitorRunbook</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>folderGUID</maml:name>
				<maml:description>
					<maml:para>Guid of the folder to filter to. Return only monitors in this folder</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Guid</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>loadParameterData</maml:name>
				<maml:description>
					<maml:para>flag to load input and output parameter data for the Runbook. Default is to not for efficiency.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SCOMonitorRunbook</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>folder</maml:name>
				<maml:description>
					<maml:para>Folder object of the folder to filter to. Return only monitors in this folder</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Folder</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>loadParameterData</maml:name>
				<maml:description>
					<maml:para>flag to load input and output parameter data for the Runbook. Default is to not for efficiency.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SCOMonitorRunbook</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>folderPath</maml:name>
				<maml:description>
					<maml:para>Path of the folder to filter to. Return only monitors in this folder</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>loadParameterData</maml:name>
				<maml:description>
					<maml:para>flag to load input and output parameter data for the Runbook. Default is to not for efficiency.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>webserverURL</maml:name>
			<maml:description>
				<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>loadParameterData</maml:name>
			<maml:description>
				<maml:para>flag to load input and output parameter data for the Runbook. Default is to not for efficiency.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="4">
			<maml:name>alternateCredentials</maml:name>
			<maml:description>
				<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">NetworkCredential</command:parameterValue>
			<dev:type>
				<maml:name>NetworkCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>folderGUID</maml:name>
			<maml:description>
				<maml:para>Guid of the folder to filter to. Return only monitors in this folder</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Guid</command:parameterValue>
			<dev:type>
				<maml:name>Guid</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>folder</maml:name>
			<maml:description>
				<maml:para>Folder object of the folder to filter to. Return only monitors in this folder</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Folder</command:parameterValue>
			<dev:type>
				<maml:name>Folder</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>folderPath</maml:name>
			<maml:description>
				<maml:para>Path of the folder to filter to. Return only monitors in this folder</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  All Runbooks --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ws = New-SCOWebserverURL webserver.domain.com 81
Get-SCOMonitorRunbook $ws</dev:code>
  			<dev:remarks>
				<maml:para>Returns all Monitor Runbooks in an environment</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>Id               : 427848e6-a474-4f40-a1d2-3098752861b0
FolderId         : 05ac26b4-e4b7-40f3-b5b7-e24735f589e9
Name             : Monitor Policy: Day 3
Description      :
CreatedBy        :
CreationTime     : 2/12/2013 4:16:27 PM
LastModifiedBy   : S-1-5-21-1085031214-651377827-725345543-441265
LastModifiedTime : 2/12/2013 4:29:46 PM
IsMonitor        : True
Path             : \zz-CleanUp\Production\WIN 7 - Day 3 Emailer\Monitor Policy: Day 3
CheckedOutBy     :
CheckedOutTime   :
Folder           :
Parameters       : {}
Activities       : {}
Jobs             : {}
Instances        : {}
Diagram          :
Statistics       : {}

Id               : 028731c6-f2e0-4c4e-81a7-32734ff960ac
FolderId         : 6d0581b4-3a44-444f-8d71-d6b31d9ccf66
Name             : Monitor Policy: Nightly Backup
Description      :
CreatedBy        :
CreationTime     : 8/1/2012 7:30:43 PM
LastModifiedBy   :
LastModifiedTime : 8/1/2012 7:30:43 PM
IsMonitor        : True
Path             : \zz-CleanUp\Sandbox\taewr\Central - Nightly Development Backup\Monitor Policy: Nightly Backup
CheckedOutBy     :
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  All Runbooks in Folder --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ws = New-SCOWebserverURL webserver.domain.com 81
Get-SCOMonitorRunbook $ws -FolderPath &quot;\Testing\Runbook 1&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Returns Monitor Runbooks under a given folder</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>Id               : d7dae444-7da1-48bb-88b7-a3549820bc4f
FolderId         : d27130f2-9b49-4466-b4a4-0ba2302230c6
Name             : New Runbook
Description      :
CreatedBy        :
CreationTime     : 6/11/2013 5:41:13 PM
LastModifiedBy   :
LastModifiedTime : 6/11/2013 5:41:13 PM
IsMonitor        : True
Path             : \Testing\Runbook 1\New Runbook
CheckedOutBy     :
CheckedOutTime   :
Folder           :
Parameters       : {}
Activities       : {}
Jobs             : {}
Instances        : {}
Diagram          :
Statistics       : {}
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-SCORunbook</command:name>
		<maml:description>
			<maml:para>gets details for a given runbook</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>SCORunbook</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para></maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-SCORunbook</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>RunbookGUID</maml:name>
				<maml:description>
					<maml:para>GUID of the runbook</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Guid</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>loadParameterData</maml:name>
				<maml:description>
					<maml:para>Load input and output parameters of Runbook or not</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SCORunbook</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>RunbookPath</maml:name>
				<maml:description>
					<maml:para>Path to the runbook, should be in form &quot;\RootFolder\Folder\RunbookName&quot;</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>loadParameterData</maml:name>
				<maml:description>
					<maml:para>Load input and output parameters of Runbook or not</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SCORunbook</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>FolderPath</maml:name>
				<maml:description>
					<maml:para>Returns Runbooks in a given folder</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>loadParameterData</maml:name>
				<maml:description>
					<maml:para>Load input and output parameters of Runbook or not</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>webserverURL</maml:name>
			<maml:description>
				<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>RunbookGUID</maml:name>
			<maml:description>
				<maml:para>GUID of the runbook</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Guid</command:parameterValue>
			<dev:type>
				<maml:name>Guid</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>loadParameterData</maml:name>
			<maml:description>
				<maml:para>Load input and output parameters of Runbook or not</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="4">
			<maml:name>alternateCredentials</maml:name>
			<maml:description>
				<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">NetworkCredential</command:parameterValue>
			<dev:type>
				<maml:name>NetworkCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>RunbookPath</maml:name>
			<maml:description>
				<maml:para>Path to the runbook, should be in form &quot;\RootFolder\Folder\RunbookName&quot;</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>FolderPath</maml:name>
			<maml:description>
				<maml:para>Returns Runbooks in a given folder</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Get Runbook by GUID --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$webserverURL = &quot;http://orchestrator.domain.com:81/Orchestrator2012/Orchestrator.svc&quot;
Get-SCORunbook -webserverURL $webserverURL -RunbookGUID &quot;79227096-28b2-480e-8d99-c3823f013939&quot;</dev:code>
  			<dev:remarks>
				<maml:para>gets a runbook by GUID</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>Id               : 79227096-28b2-480e-8d99-c3823f013939
FolderId         : 982450e9-a865-48e4-92fe-9a9ae2797e8d
Name             : Monitor Policy: Nightly Backup
Description      :
CreatedBy        :
CreationTime     : 8/29/2012 1:39:47 PM
LastModifiedBy   : S-1-5-21-1085031214-651377827-725345543-441265
LastModifiedTime : 5/2/2013 4:28:07 PM
IsMonitor        : True
Path             : \Central Workflows\Central - Nightly Development Backup\Monitor Policy: Nightly Backup
CheckedOutBy     :
CheckedOutTime   :
Folder           :
Parameters       : {}
Activities       : {}
Jobs             : {}
Instances        : {}
Diagram          :
Statistics       : {}
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Get Runbook by Path --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$webserverURL = &quot;http://orchestrator.domain.com:81/Orchestrator2012/Orchestrator.svc&quot;
Get-SCORunbook -webserverURL $webserverURL -RunbookPath &quot;\Central Workflows\Central - Nightly Development Backup\Monitor Policy: Nightly Backup&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Gets a runbook by path</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>Id               : 79227096-28b2-480e-8d99-c3823f013939
FolderId         : 982450e9-a865-48e4-92fe-9a9ae2797e8d
Name             : Monitor Policy: Nightly Backup
Description      :
CreatedBy        :
CreationTime     : 8/29/2012 1:39:47 PM
LastModifiedBy   : S-1-5-21-1085031214-651377827-725345543-441265
LastModifiedTime : 5/2/2013 4:28:07 PM
IsMonitor        : True
Path             : \Central Workflows\Central - Nightly Development Backup\Monitor Policy: Nightly Backup
CheckedOutBy     :
CheckedOutTime   :
Folder           :
Parameters       : {}
Activities       : {}
Jobs             : {}
Instances        : {}
Diagram          :
Statistics       : {}
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-SCORunbookServer</command:name>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>SCORunbookServer</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para></maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-SCORunbookServer</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>runbookServerName</maml:name>
				<maml:description>
					<maml:para>Name of the Runbook Server to target</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>runbookServerGUID</maml:name>
				<maml:description>
					<maml:para>Name of the Runbook Server to target</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Guid</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>loadJobs</maml:name>
				<maml:description>
					<maml:para>load data about the jobs on the Runbook Servers</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "5" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>webserverURL</maml:name>
			<maml:description>
				<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>runbookServerName</maml:name>
			<maml:description>
				<maml:para>Name of the Runbook Server to target</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>runbookServerGUID</maml:name>
			<maml:description>
				<maml:para>Name of the Runbook Server to target</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Guid</command:parameterValue>
			<dev:type>
				<maml:name>Guid</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>loadJobs</maml:name>
			<maml:description>
				<maml:para>load data about the jobs on the Runbook Servers</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="5">
			<maml:name>alternateCredentials</maml:name>
			<maml:description>
				<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">NetworkCredential</command:parameterValue>
			<dev:type>
				<maml:name>NetworkCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Get all Runbook Servers and load job data --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ws = New-SCOWebserverURL webserver.domain.com 81
Get-SCORunbookServer $ws -loadJobs</dev:code>
  			<dev:remarks>
				<maml:para>returns all Runbook Servers, the count of jobs running on them and pointers to those jobs</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>server                                                  countOfJobs jobs
------                                                  ----------- ----
OrchestratorInterop.SCOrchestrator.Runbo...                     116 {OrchestratorInterop.Data_Class.JobInst...
OrchestratorInterop.SCOrchestrator.Runbo...                       0 {}
OrchestratorInterop.SCOrchestrator.Runbo...                       0 {}
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Get-SCOSubfolder</command:name>
		<maml:description>
			<maml:para>gets folders inside a specified folder</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>SCOSubfolder</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para></maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Get-SCOSubfolder</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>FolderPath</maml:name>
				<maml:description>
					<maml:para>Path to the folder in format &quot;\Base Folder\Folder Name&quot;</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>loadRunbooks</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>webserverURL</maml:name>
			<maml:description>
				<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>FolderPath</maml:name>
			<maml:description>
				<maml:para>Path to the folder in format &quot;\Base Folder\Folder Name&quot;</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>loadRunbooks</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="4">
			<maml:name>alternateCredentials</maml:name>
			<maml:description>
				<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">NetworkCredential</command:parameterValue>
			<dev:type>
				<maml:name>NetworkCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  GetSCOSubfolder --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$webserverURL = &quot;http://orchestrator.domain.com:81/Orchestrator2012/Orchestrator.svc&quot;
Get-SCOSubfolder -webserverURL $webserverURL -FolderPath &quot;\Central Workflows&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Returns all folders under a specified folder</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>Id               : 7493c24f-d4cb-4db7-9f9a-572dd53bdbe9
ParentId         : f8ebbb75-e65c-42de-9aa4-0868de808a7b
Name             : Central - Q - Web Service Monitor
CreatedBy        :
CreationTime     : 4/19/2013 4:35:03 PM
LastModifiedBy   :
LastModifiedTime : 4/19/2013 4:35:03 PM
Path             : \Central Workflows\Central - Q - Web Service Monitor
Parent           :
Subfolders       : {}
Runbooks         : {}

Id               : 982450e9-a865-48e4-92fe-9a9ae2797e8d
ParentId         : f8ebbb75-e65c-42de-9aa4-0868de808a7b
Name             : Central - Nightly Development Backup
CreatedBy        :
CreationTime     : 8/29/2012 1:39:47 PM
LastModifiedBy   : S-1-5-21-1085031214-651377827-725345543-443933
LastModifiedTime : 3/26/2013 2:51:22 PM
Path             : \Central Workflows\Central - Nightly Development Backup
Parent           :
Subfolders       : {}
Runbooks         : {}
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>New-SCOWebserverURL</command:name>
		<maml:description>
			<maml:para>Generates a properly formatted webserverURL string</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>SCOWebserverURL</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>generated in format:
http://webservername:port/Orchestrator2012/Orchestrator.svc

use -useSSL to switch to the following format (and make sure to set -port to &quot;443&quot;)
https://webservername:port/Orchestrator2012/Orchestrator.svc</maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>New-SCOWebserverURL</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>ServerName</maml:name>
				<maml:description>
					<maml:para>Name of the Orchestrator webserver
Ex: orchestrator.domain.com</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>port</maml:name>
				<maml:description>
					<maml:para>port the web service is running on
override if your web service runs on a different port (i.e. port 443 for ssl)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>useSSL</maml:name>
				<maml:description>
					<maml:para>set to true to use https instead of http</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>ServerName</maml:name>
			<maml:description>
				<maml:para>Name of the Orchestrator webserver
Ex: orchestrator.domain.com</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>port</maml:name>
			<maml:description>
				<maml:para>port the web service is running on
override if your web service runs on a different port (i.e. port 443 for ssl)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>81</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>useSSL</maml:name>
			<maml:description>
				<maml:para>set to true to use https instead of http</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$false</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Generate Non SSL URL --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-SCOWebserverURL -ServerName &quot;orchestrator.domain.com&quot;</dev:code>
  			<dev:remarks>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>http://orchestrator.domain.com:81/Orchestrator2012/Orchestrator.svc
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Generate Non SSL URL Alternate Port --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-SCOWebserverURL -ServerName &quot;orchestrator.domain.com&quot; -port 80</dev:code>
  			<dev:remarks>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>http://orchestrator.domain.com:80/Orchestrator2012/Orchestrator.svc
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Generate SSL URL --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-SCOWebserverURL -ServerName &quot;orchestrator.domain.com&quot; -port 443 -useSSL $true</dev:code>
  			<dev:remarks>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>https://orchestrator.domain.com:443/Orchestrator2012/Orchestrator.svc
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Start-SCORunbook</command:name>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Start</command:verb>
		<command:noun>SCORunbook</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para></maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Start-SCORunbook</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>RunbookPath</maml:name>
				<maml:description>
					<maml:para>Runbook Path reference to start</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>InputParameters</maml:name>
				<maml:description>
					<maml:para>Hashtable including the input parameters for the runbook
ex: $inputs = @{&quot;Key1&quot;=&quot;Value1&quot;;&quot;Key2&quot;=&quot;Value2&quot;}</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>WaitForExit</maml:name>
				<maml:description>
					<maml:para>Set this flag to wait for the job to complete before returning</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>RetryCount</maml:name>
				<maml:description>
					<maml:para>number of times to retry if web service is unavailable</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "6" >
				<maml:name>RetryDelay</maml:name>
				<maml:description>
					<maml:para>delay between attempts</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "7" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Start-SCORunbook</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>RunbookGuid</maml:name>
				<maml:description>
					<maml:para>Runbook GUID reference to start</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Guid</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>InputParameters</maml:name>
				<maml:description>
					<maml:para>Hashtable including the input parameters for the runbook
ex: $inputs = @{&quot;Key1&quot;=&quot;Value1&quot;;&quot;Key2&quot;=&quot;Value2&quot;}</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>WaitForExit</maml:name>
				<maml:description>
					<maml:para>Set this flag to wait for the job to complete before returning</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>RetryCount</maml:name>
				<maml:description>
					<maml:para>number of times to retry if web service is unavailable</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "6" >
				<maml:name>RetryDelay</maml:name>
				<maml:description>
					<maml:para>delay between attempts</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "7" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Start-SCORunbook</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Runbook</maml:name>
				<maml:description>
					<maml:para>Runbook reference to start</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Runbook</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>InputParameters</maml:name>
				<maml:description>
					<maml:para>Hashtable including the input parameters for the runbook
ex: $inputs = @{&quot;Key1&quot;=&quot;Value1&quot;;&quot;Key2&quot;=&quot;Value2&quot;}</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>WaitForExit</maml:name>
				<maml:description>
					<maml:para>Set this flag to wait for the job to complete before returning</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>RetryCount</maml:name>
				<maml:description>
					<maml:para>number of times to retry if web service is unavailable</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "6" >
				<maml:name>RetryDelay</maml:name>
				<maml:description>
					<maml:para>delay between attempts</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "7" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>webserverURL</maml:name>
			<maml:description>
				<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>RunbookPath</maml:name>
			<maml:description>
				<maml:para>Runbook Path reference to start</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>InputParameters</maml:name>
			<maml:description>
				<maml:para>Hashtable including the input parameters for the runbook
ex: $inputs = @{&quot;Key1&quot;=&quot;Value1&quot;;&quot;Key2&quot;=&quot;Value2&quot;}</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
			<dev:type>
				<maml:name>Hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>WaitForExit</maml:name>
			<maml:description>
				<maml:para>Set this flag to wait for the job to complete before returning</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
			<maml:name>RetryCount</maml:name>
			<maml:description>
				<maml:para>number of times to retry if web service is unavailable</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>1</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6">
			<maml:name>RetryDelay</maml:name>
			<maml:description>
				<maml:para>delay between attempts</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>10</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="7">
			<maml:name>alternateCredentials</maml:name>
			<maml:description>
				<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">NetworkCredential</command:parameterValue>
			<dev:type>
				<maml:name>NetworkCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>RunbookGuid</maml:name>
			<maml:description>
				<maml:para>Runbook GUID reference to start</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Guid</command:parameterValue>
			<dev:type>
				<maml:name>Guid</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Runbook</maml:name>
			<maml:description>
				<maml:para>Runbook reference to start</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Runbook</command:parameterValue>
			<dev:type>
				<maml:name>Runbook</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Start a Job By GUID --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ws = New-SCOWebserverURL webserver.domain.com
Start-SCORunbook $ws -RunbookGuid &quot;d7dae444-7da1-48bb-88b7-a3549820bc4f&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Starts a job by Runbook GUID</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>job                           InputParameters               OutputParameters                         ActiveInstances
---                           ---------------               ----------------                         ---------------
OrchestratorInterop.SCOrch...                                                                                      0
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Start a Job By Path --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ws = New-SCOWebserverURL webserver.domain.com
Start-SCORunbook $ws -RunbookPath &quot;\Testing\Runbook 1\New Runbook&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Starts a job by Runbook path</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>job                           InputParameters               OutputParameters                         ActiveInstances
---                           ---------------               ----------------                         ---------------
OrchestratorInterop.SCOrch...                                                                                      0
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Start a Job By Runbook Reference --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ws = New-SCOWebserverURL webserver.domain.com
Get-SCORunbook $ws -RunbookPath &quot;\Testing\Runbook 1\New Runbook&quot; | Start-SCORunbook $ws</dev:code>
  			<dev:remarks>
				<maml:para>Starts a job by Runbook path</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>job                           InputParameters               OutputParameters                         ActiveInstances
---                           ---------------               ----------------                         ---------------
OrchestratorInterop.SCOrch...                                                                                      0
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Start a Job By Runbook Reference with Parameters --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ws = New-SCOWebserverURL webserver.domain.com
$inputParam = @{&quot;Parameter 1&quot;=&quot;v1&quot;;&quot;Parameter 2&quot;=&quot;v2&quot;}
Get-SCORunbook $ws -RunbookPath &quot;\Testing\New Runbook&quot; | Start-SCORunbook $ws -InputParameters $inputParam -WaitForExit</dev:code>
  			<dev:remarks>
				<maml:para>Starts a job by Runbook Reference, passes parameters and waits for exit</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>job                           InputParameters               OutputParameters                         ActiveInstances
---                           ---------------               ----------------                         ---------------
OrchestratorInterop.SCOrch... {[Parameter 1, v1], [Param... {[p1, v1], [p2, v2]}      		                      0
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by Help Cmdlet Editor-->
	<command:details>
		<command:name>Stop-SCOJob</command:name>
		<maml:description>
			<maml:para>Stops a runbook job</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Stop</command:verb>
		<command:noun>SCOJob</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para></maml:para>
	</maml:description>
	<command:syntax>		<command:syntaxItem>
			<maml:name>Stop-SCOJob</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>job</maml:name>
				<maml:description>
					<maml:para>a pointer to a job to get the details of. This can be found with commands like Get-SCORunbookJobs or Invoke-SCORunbook</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >JobInstance</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>webserverURL</maml:name>
				<maml:description>
					<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>alternateCredentials</maml:name>
				<maml:description>
					<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>job</maml:name>
			<maml:description>
				<maml:para>a pointer to a job to get the details of. This can be found with commands like Get-SCORunbookJobs or Invoke-SCORunbook</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">JobInstance</command:parameterValue>
			<dev:type>
				<maml:name>JobInstance</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>webserverURL</maml:name>
			<maml:description>
				<maml:para>path to your web service endpoint. Format http://webservername:81/Orchestrator2012/Orchestrator.svc
Can be generated with the cmdlet New-SCOWebserverURL</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>alternateCredentials</maml:name>
			<maml:description>
				<maml:para>Alternate credentials to use to connect to the web service with - If not passed command will use default credentials of logged on user
$ac = (get-credentials).networkcredential()
$ac = new-object system.net.NetworkCredential(&quot;user&quot;,&quot;password&quot;,&quot;domain&quot;)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">NetworkCredential</command:parameterValue>
			<dev:type>
				<maml:name>NetworkCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  stop job after starting --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ws = New-SCOWebserverURL webserver.domain.com 81
$job = Start-Runbook $ws -runbookGUID &quot;79227096-28b2-480e-8d99-c3823f013939&quot;
$job | Stop-SCOJob $ws</dev:code>
  			<dev:remarks>
				<maml:para>starts a job then stops it</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>job                                     InputParameters                         OutputParameters
---                                     ---------------                         ----------------
OrchestratorInterop.SCOrchestrator.Job  {}                                      {}

$job.job


Id               : 7773f214-dfd4-4e7b-939a-3b9c5a4bc72d
RunbookId        : 79227096-28b2-480e-8d99-c3823f013939
Parameters       : &lt;Data&gt;&lt;/Data&gt;
RunbookServers   :
RunbookServerId  :
ParentId         :
ParentIsWaiting  : False
Status           : Canceled
CreatedBy        : S-1-5-21-1085031214-651377827-725345543-441162
CreationTime     : 6/10/2013 7:20:34 PM
LastModifiedBy   : S-1-5-21-1085031214-651377827-725345543-441162
LastModifiedTime : 6/10/2013 7:20:36 PM
Runbook          :
Instances        : {}
RunbookServer    :
Statistics       : {}
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
</helpItems>
